{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "6e2ca949-5968-4c53-903b-47aff031e681",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "e9484ff7-a40b-4942-9b67-7d2e326bfc79",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "4215a334-bf61-471e-a7a3-38e0c6bde2ed",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "d6046913-9be9-49a2-b076-f964adac6ff9",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "e4282f6e-43f2-4416-88da-8ce95a8b0d61",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "49e4deb8-cfea-4e4c-a714-646130d459b7",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "bfa9218d-cf60-4787-8a75-c972c4ff7c59",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "91c5fe4c-fade-4ad2-97ca-1e2babeaefcc",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "ad1563e5-1587-467c-999d-3e5fdc09cc58",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "86ec10b3-582e-4ea5-a9dc-084af6f4c017",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "58588efd-365c-4d1e-831e-1c4bc32ea058",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "ce080661-79d1-4f0d-830b-bfb75ab7c444",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "fbfa1707-0485-4f18-96da-b04ac3705559",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "a5a1848a-4f3c-4802-976f-91900ceadf58",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "4bf8a8a0-7a61-42f6-82d0-6c29b8c6a24c",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "228b3fb0-73e7-4121-9bd0-fd1da56fdea9",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "e2c66aec-d939-40cf-94b9-a5787fec8e73",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "e6f7dbe0-7a1b-4dfc-aed9-4ab2f4bdee60",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "8b7e0faa-d382-49a7-b7bd-3f1d579273ec"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "5addcea0-68fa-4184-961d-1e177a589506"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "referrerPolicy": "no-referrer",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "4eb1c63d-f1a6-4bde-94f4-83d3e2235336",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "fed75ef4-73b7-4c91-aab2-8d467cfea799",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "251b930a-b985-4945-a517-63a095171c4e",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dee87b12-f98b-47bd-9d2d-b43c35005b89",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "588e3f70-0633-4d85-8be9-612d2bc64224",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2761b1be-1850-41fa-aff1-379775792eaf",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8352f3eb-efde-4f00-b56f-f1550c3e361f",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "828f6841-b0a9-41dd-b4f9-d698751eedb5",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b54cc69f-3e28-48da-a5ed-0ee556a66b23",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "373d3f6f-39d1-417c-8dc8-28c433285c67",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "162157e3-05a2-4488-9613-276b80bd09eb",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "299dd3a1-cd1b-4762-a807-8a7fe8bfcfa8",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "99f6e1dd-f01e-4a3d-99c0-7c09103d253a",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c9afd916-dd33-4f5c-b3ef-e304c26e8d4a",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cad671d7-f542-4f8b-9db4-81299244ed7d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "91990003-cebf-4257-8f86-4156a46f55a3",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "17db2bd6-8ab5-4501-a0b9-277693ed0c85",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b13a8ce5-fe45-4984-a008-8e537b6b794d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "a861b3e6-6d3a-434b-b0dc-c93a1531f6c5",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "589e8527-490b-4b75-9d7a-0fdad191e5ab",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ff456d46-70d8-488d-bec6-ddfc03b789af",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "0a3f411e-388c-4abb-a653-763e6f9d974a",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "521cb4dc-678a-490f-8e89-76944e1a0c6a",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "cdb696a0-dff7-46e7-8913-da18475ebb41",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "50eb5a13-e959-43be-8bce-0674f41141ae",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "65d67dd1-e6cd-4a82-82ab-b5f6f77552f6",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "6b55eda0-2fb2-4a28-a6bc-baba6000888e",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "d6642399-f7cc-4b9c-b24e-aa8292065a4e",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e0d515c5-b08f-4072-a2f8-79415b927d3a",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dcb8e53a-6824-40e6-bb12-5c5394fcc82a",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "c6be9e2e-8388-4d86-bc39-c2689f9fcfd4",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c5eb5c1a-0141-4420-9981-ec0e7a05b535",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "5423f5ac-277f-4d0d-9164-b37022469539",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1ea2dd1d-7f98-4a81-aceb-29235cf2d1cb",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "424f3ee8-2249-49b5-8010-a4247b7d09dc",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "aacd560e-e667-4eb1-a95e-7fe001513d75",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e1f9482c-476a-4d88-b257-d71ad6f9b706",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/chatbot/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/chatbot/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/chatbot/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "b93cea25-ef4c-4b7a-9d05-46f44588dc8e",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "513189f2-141e-4042-99df-3bc43522938a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/chatbot/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1715013496",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "26cf56ac-e6ea-485c-ac56-f649cbfbed4a",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6527054a-41e4-4995-bb54-e2392ad70412",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a0c15b71-e48e-40d0-be4b-8ffbd489f870",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "92a80595-edf1-481c-977f-1ebcef66dfaa",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "46ab0f3b-63dd-4423-a994-7590f344658b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "rootUrl": "",
      "secret": "69o712yiPS0IlNhhKomLOpwWUJgiYGT8",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "950a77ed-c8bf-4751-bd21-55f8a39436a0",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "http://iai-ml4home028.iai.kit.edu/monitoring",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1714759715",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "authorizationServicesEnabled": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "decisionStrategy": "UNANIMOUS",
        "policies": [],
        "policyEnforcementMode": "ENFORCING",
        "resources": [],
        "scopes": []
      },
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "grafana-oauth",
      "consentRequired": false,
      "defaultClientScopes": [
        "offline_access",
        "profile",
        "roles",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "5b2ee552-f922-4725-8883-a7f93712fdc0",
      "implicitFlowEnabled": false,
      "name": "Grafana Monitoring",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "web-origins",
        "acr",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e5baffc5-ab29-4a75-a6c4-bd9b843cc5c4",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2933f62c-e54c-42c6-ba2a-4e40b4469817",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8736f42a-22e2-4eda-b152-1db33fd99a9e",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "roles",
            "id.token.claim": "false",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "477fd3c6-a7c9-4d91-8e35-a88a501c1e1d",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "*"
      ],
      "rootUrl": "http://iai-ml4home028.iai.kit.edu/monitoring",
      "secret": "Ud7sRqQf0TlXllt6HE3RwwFKNhZBCLgP",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "http://iai-ml4home028.iai.kit.edu/monitoring"
      ]
    },
    {
      "adminUrl": "http://iai-ml4home028.iai.kit.edu:8999/",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1719664804",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "http://iai-ml4home028.iai.kit.edu:8999/*"
      },
      "authenticationFlowBindingOverrides": {},
      "authorizationServicesEnabled": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "decisionStrategy": "UNANIMOUS",
        "policies": [
          {
            "config": {
              "groups": "[{\"path\":\"/Developer\",\"extendChildren\":false}]",
              "groupsClaim": ""
            },
            "decisionStrategy": "UNANIMOUS",
            "description": "",
            "id": "db3c6507-31dc-4af5-84c5-97b35a43eaa1",
            "logic": "POSITIVE",
            "name": "Developer",
            "type": "group"
          }
        ],
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "_id": "081619d6-59c8-4df1-863d-59e7a357e7ec",
            "attributes": {},
            "name": "Default Resource",
            "ownerManagedAccess": false,
            "type": "urn:langfuse:resources:default",
            "uris": [
              "/*"
            ]
          }
        ],
        "scopes": []
      },
      "baseUrl": "http://iai-ml4home028.iai.kit.edu:8999/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "langfuse",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "3c7e349d-097b-4a7b-a889-9097c9e9e733",
      "implicitFlowEnabled": false,
      "name": "",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost"
          },
          "consentRequired": false,
          "id": "0e724b3a-cf1b-4e1a-a831-dcff9bcdf582",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress"
          },
          "consentRequired": false,
          "id": "d09fdfb3-1d34-44be-84de-c2a73783e119",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id"
          },
          "consentRequired": false,
          "id": "b859ae05-e22e-459c-b23d-5c575eaee976",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "http://iai-ml4home028.iai.kit.edu:8999/*"
      ],
      "rootUrl": "http://iai-ml4home028.iai.kit.edu:8999/",
      "secret": "ehcdrQtYxgMdq5rOOsW52RsDV3axBA38",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "http://iai-ml4home028.iai.kit.edu:8999/*"
      ]
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "access.token.lifespan": "2592000",
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1715013321",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "http://iai-ml4home028.iai.kit.edu/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "oauth",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "offline_access",
        "profile"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": false,
      "id": "cb2d9b06-7934-4459-8787-e2493fa602cc",
      "implicitFlowEnabled": true,
      "name": "oauth",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "acr",
        "address",
        "phone",
        "roles",
        "microprofile-jwt",
        "email"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "05207ab6-b58b-4e6d-b498-06ebad64ad57",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f379bb97-cb94-440f-bc3f-3e0f3e46bbd3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "325cc0e9-2d05-4168-939b-38f0b8824812",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "roles",
            "id.token.claim": "false",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3d66c593-6efa-42d1-bb61-ba44290b00c1",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "*"
      ],
      "rootUrl": "",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "*"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "0f239358-00cf-4530-a954-68405ab540ed",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/chatbot/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "15933dfc-3a7f-4f62-b318-8c5d52626f87",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "784bbf46-b343-4e3f-be89-d8ea204b04e2",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/chatbot/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "544ec811-85e4-4571-8004-bba8bf3bcfcb",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "2806c2e3-aa02-46df-9d7c-0ea139e0b283",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "758f48ca-0ec8-419e-b367-23c14a00c6f2",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "a8848f46-4b5c-4ff0-9eca-84c37907b94c",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "7eb0d92b-bb2c-429d-b42a-ef716969cbfb",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {},
        "id": "ec0a3e49-20f3-44b9-96dc-f85ce52473f0",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "35f11a43-188c-4236-844a-c3402fbbd6bd",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "f23b91cd-0c3c-4885-bd87-d61d1dcf5ec4",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "6442e42a-534e-4b48-a054-4b87dda8ddf7",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "8c15f662-ac09-4a0a-8510-12d692ff61dd",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        },
        "id": "c7dafad6-4fdf-41d4-8311-5440d89cc980",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "a5d99e5b-b60c-4220-afb8-54c468c4c152",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "profile",
    "email",
    "web-origins",
    "acr",
    "role_list",
    "roles"
  ],
  "defaultGroups": [
    "/Default"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "120f2f17-1a46-4c4a-8f89-ba3d1318541c",
    "description": "${role_default-roles}",
    "id": "64f51738-5329-4e66-8fb5-75a94215633d",
    "name": "default-roles-chatbot"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": true,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [
    {
      "attributes": {},
      "clientRoles": {
        "grafana-oauth": [
          "viewer"
        ]
      },
      "id": "7ebc8107-cfbd-45de-b1bb-4e853547dd6d",
      "name": "Default",
      "path": "/Default",
      "realmRoles": [],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {
        "grafana-oauth": [
          "admin",
          "grafanaadmin"
        ],
        "oauth": [
          "coder"
        ]
      },
      "id": "abf9f3b9-25eb-4639-8d4d-0f0ae153ce5a",
      "name": "Developer",
      "path": "/Developer",
      "realmRoles": [],
      "subGroups": []
    }
  ],
  "id": "120f2f17-1a46-4c4a-8f89-ba3d1318541c",
  "identityProviderMappers": [],
  "identityProviders": [],
  "internationalizationEnabled": false,
  "keycloakVersion": "23.0.7",
  "localizationTexts": {},
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "chatbot",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "TERMS_AND_CONDITIONS"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_view-groups}",
          "id": "f2457ffb-cc25-4ad8-b386-51176f2f53d1",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_manage-account-links}",
          "id": "3da80402-fb4a-41b7-9b69-ac6b7ca35b3e",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_manage-consent}",
          "id": "bafd4ebb-9b06-404e-8c4f-6c85d6030708",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_view-profile}",
          "id": "8b58b56a-c259-48b6-89da-4d0cacd21252",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_view-applications}",
          "id": "c8e84f56-a480-459d-abc6-cb35553c67b0",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_manage-account}",
          "id": "1ba931ab-93d0-4bd9-874b-6d3fc269184e",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_view-consent}",
          "id": "a6e88e24-3c78-49c5-85be-ce9dfd6a9556",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "a2ff936d-c2af-43e8-9b79-8d5e674f1c1b",
          "description": "${role_delete-account}",
          "id": "2037b2a1-2f68-4283-9de9-1a3966d962a1",
          "name": "delete-account"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "950a77ed-c8bf-4751-bd21-55f8a39436a0",
          "description": "${role_read-token}",
          "id": "b1736c88-d7c8-4496-8281-bcb8b6842768",
          "name": "read-token"
        }
      ],
      "grafana-oauth": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b2ee552-f922-4725-8883-a7f93712fdc0",
          "id": "e27d833c-be9c-4106-a8e4-418bcb3fcb92",
          "name": "uma_protection"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b2ee552-f922-4725-8883-a7f93712fdc0",
          "description": "",
          "id": "1aa39e99-ce65-42a8-9a45-e8ea6d3f5e0b",
          "name": "admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b2ee552-f922-4725-8883-a7f93712fdc0",
          "description": "",
          "id": "ef974b8b-b801-4506-9f60-59cfc7d8515f",
          "name": "editor"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b2ee552-f922-4725-8883-a7f93712fdc0",
          "description": "",
          "id": "a5776b05-0904-497a-8a65-b795dccc0eeb",
          "name": "grafanaadmin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5b2ee552-f922-4725-8883-a7f93712fdc0",
          "description": "",
          "id": "4c04a589-9be3-4b70-8b9c-44e9b5e42cef",
          "name": "viewer"
        }
      ],
      "langfuse": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "3c7e349d-097b-4a7b-a889-9097c9e9e733",
          "id": "73295eb9-dee4-430c-a4f6-9ffbf1d68c59",
          "name": "uma_protection"
        }
      ],
      "oauth": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "cb2d9b06-7934-4459-8787-e2493fa602cc",
          "description": "",
          "id": "b3ad0ee5-ad68-4ace-84cf-c9bc5e14ee2a",
          "name": "coder"
        }
      ],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_impersonation}",
          "id": "d39080b2-81e2-4bbc-8cb5-91a2b9d5f48f",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-identity-providers}",
          "id": "3982edb9-926c-48bb-b169-6529e706433e",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-events}",
          "id": "ef14e45f-2cf8-4425-b934-256296e59721",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_create-client}",
          "id": "f752a0bc-fc3f-48fc-9c1c-7e64eefcbe9a",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-authorization}",
          "id": "87fe2d45-34d6-4d42-84b1-54065f4bb6a6",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-clients}",
          "id": "6c3411d0-354e-4817-bfc8-fa4f7af68891",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-identity-providers}",
          "id": "78346f9b-ba23-4911-9470-21b537515d46",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_query-realms}",
          "id": "70fc3fd4-45f5-47bd-9055-09dadf8fc376",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-realm}",
          "id": "7ed98324-ac3d-4e9d-a49f-52bff2c4f113",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-clients}",
          "id": "b2f2103d-23bb-4104-8072-7081930b7073",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-events}",
          "id": "61e9eba4-0aed-4754-93ba-760a3241ea09",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-realm}",
          "id": "8920e8c9-c8c4-4680-aaf2-e4984e965a58",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_query-groups}",
          "id": "82f3d65d-4095-449b-840f-cff89225811f",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-users}",
          "id": "41bfce94-7d76-47f1-bcac-f19bc1a26fe2",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_query-users}",
          "id": "3eced90e-98b3-461d-8c74-9102d090f69d",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-identity-providers",
                "impersonation",
                "view-events",
                "view-clients",
                "view-identity-providers",
                "view-authorization",
                "create-client",
                "query-realms",
                "view-realm",
                "manage-clients",
                "manage-events",
                "query-groups",
                "manage-realm",
                "query-users",
                "manage-users",
                "manage-authorization",
                "query-clients",
                "view-users"
              ]
            }
          },
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_realm-admin}",
          "id": "04ba4d91-8861-4fa1-84ad-6352ab7b8f4e",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_manage-authorization}",
          "id": "d01201cb-f5ee-4430-b2a0-050c9b57d5cb",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_query-clients}",
          "id": "1c691165-1974-4401-b9dd-567fce5a6553",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "containerId": "0f239358-00cf-4530-a954-68405ab540ed",
          "description": "${role_view-users}",
          "id": "7c8df1ca-7e28-4926-8476-12b24a46e20d",
          "name": "view-users"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "120f2f17-1a46-4c4a-8f89-ba3d1318541c",
        "description": "${role_default-roles}",
        "id": "64f51738-5329-4e66-8fb5-75a94215633d",
        "name": "default-roles-chatbot"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "120f2f17-1a46-4c4a-8f89-ba3d1318541c",
        "description": "${role_offline-access}",
        "id": "9ce59045-fea9-429b-a629-f553d185cd26",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "120f2f17-1a46-4c4a-8f89-ba3d1318541c",
        "description": "${role_uma_authorization}",
        "id": "1f7644f2-f682-4423-97e6-e816c9b54661",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "clientRoles": {
        "grafana-oauth": [
          "uma_protection"
        ]
      },
      "createdTimestamp": 1714759715226,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "fa1beb2b-ae78-4f55-a90c-5b9fb3f9e4e1",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-chatbot"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "grafana-oauth",
      "totp": false,
      "username": "service-account-grafana-oauth"
    },
    {
      "clientRoles": {
        "langfuse": [
          "uma_protection"
        ]
      },
      "createdTimestamp": 1719664804748,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [
        "/Default"
      ],
      "id": "a424c09f-1fb8-4787-bec9-3eff5d36686b",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-chatbot"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "langfuse",
      "totp": false,
      "username": "service-account-langfuse"
    }
  ],
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
